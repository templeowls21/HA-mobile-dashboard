type: custom:button-card
tap_action:
  action: none
styles:
  grid:
    - grid-template-areas: "\"head spacer1 tab1 spacer2 tab2 \""
    - grid-template-columns: 50% 3% 22% 3% 22%
    - grid-template-rows: min-content min-content
  card:
    - padding-left: 0px
    - padding-right: 0px
    - padding-top: 0px
    - padding-bottom: 0px
    - height: auto
    - background-color: transparent
custom_fields:
  head:
    card:
      type: custom:button-card
      name: |
        [[[ return `Hi, ${user.name}!`; ]]]
      show_label: true
      label: >-
        [[[ const now = new Date(); const options = { weekday: "short", day:
        "2-digit", month: "short" }; return now.toLocaleString("en-GB",
        options).replace(",", "") + "&nbsp;&nbsp;" +
        now.toLocaleTimeString("en-GB", { hour: "2-digit", minute: "2-digit",
        hour12: true }); ]]]
      styles:
        card:
          - background-color: transparent
          - padding: 1px
          - border-style: none
          - margin-top: "-15px"
        grid:
          - grid-template-areas: " \"n\" \"l\""
          - grid-template-columns: 100%
          - grid-template-rows: 1fr min-content
          - gap: 0px 0px
        name:
          - font-size: 40px
          - justify-self: left
          - letter-spacing: "-2.5px"
          - font-weight: bold
          - padding-left: 6px
          - padding-top: 5px
        label:
          - font-size: 18px
          - justify-self: left
          - letter-spacing: "-1px"
          - font-weight: 400
          - padding-left: 6px
  tab1:
    card:
      type: custom:button-card
      tap_action:
        action: navigate
        navigation_path: "#person-1"
      styles:
        card:
          - padding: 0px
          - height: 80px
          - border-radius: 10px
          - justify-content: center
          - align-items: center
          - background-color: transparent
        grid:
          - display: grid
          - grid-template-columns: 45px
          - grid-template-rows: auto
          - grid-template-areas: |
              "picture"
              "picture"
        custom_fields:
          travel:
            - position: absolute
            - top: 40px
            - left: 40px
            - height: 50px
            - width: 50px
          picture:
            - grid-area: picture
            - justify-self: start
            - align-self: center
            - margin-left: 6px
            - margin-top: 2px
      custom_fields:
        travel:
          card:
            type: custom:button-card
            tap_action:
              action: navigate
              navigation_path: "#person-1"
            styles:
              card:
                - padding: 0px
                - height: auto
                - border-radius: 10px
                - justify-content: center
                - align-items: center
                - background-color: transparent
              grid:
                - display: grid
                - grid-template-columns: 45px
                - grid-template-rows: auto
                - grid-template-areas: |
                    "picture"
                    "picture"
              custom_fields:
                picture:
                  - grid-area: picture
                  - justify-self: start
                  - align-self: center
                  - margin-left: 6px
                  - margin-top: 2px
            custom_fields:
              picture: |
                [[[
                  let state = states['person.person_1'].state;
                  let borderColor = "gray";
                  if (state === "home") {
                    borderColor = "green";
                  } else if (state === "work1" || state === "work2") {
                    borderColor = "red";
                  } else {
                    borderColor = "orange";
                  }

                  let minutes = states['sensor.travel_time_home_person1']?.state || "";

                  return `<div style="border: 3px solid ${borderColor}; border-radius: 50%; width: 30px; height: 30px; background-color: black; display: flex; flex-direction: column; justify-content: center; align-items: center; color: white;">
                            <div style="font-size: 14px; font-weight: bold;">${minutes}</div>
                            <div style="font-size: 8px;">min</div>
                          </div>`;
                ]]]
        picture: |
          [[[
            let state = states['person.person_1'].state;
            let borderColor = "gray";
            if (state === "home") {
              borderColor = "green";
            } else if (state === "work1") {
              borderColor = "red";
            } else if (state === "work2") {
              borderColor = "red";
            } else {
              borderColor = "orange";
            }

            return `<div style="position: relative; margin: 0; padding: 0; border: 4px solid ${borderColor}; border-radius: 50%; width: 60px; height: 60px; display: flex; justify-content: center; align-items: center;">
                      <img src="${states['person.person_1'].attributes.entity_picture}" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin: 0; padding: 0;">
                    </div>`;
          ]]]
  tab2:
    card:
      type: custom:button-card
      tap_action:
        action: navigate
        navigation_path: "#person-2"
      styles:
        card:
          - padding: 0px
          - height: 80px
          - border-radius: 10px
          - justify-content: center
          - align-items: center
          - background-color: transparent
        grid:
          - display: grid
          - grid-template-columns: 45px
          - grid-template-rows: auto
          - grid-template-areas: |
              "picture"
              "picture"
        custom_fields:
          travel:
            - position: absolute
            - top: 40px
            - left: 40px
            - height: 50px
            - width: 50px
          picture:
            - grid-area: picture
            - justify-self: start
            - align-self: center
            - margin-left: 6px
            - margin-top: 2px
      custom_fields:
        travel:
          card:
            type: custom:button-card
            tap_action:
              action: navigate
              navigation_path: "#person-2"
            styles:
              card:
                - padding: 0px
                - height: auto
                - border-radius: 10px
                - justify-content: center
                - align-items: center
                - background-color: transparent
              grid:
                - display: grid
                - grid-template-columns: 45px
                - grid-template-rows: auto
                - grid-template-areas: |
                    "picture"
                    "picture"
              custom_fields:
                picture:
                  - grid-area: picture
                  - justify-self: start
                  - align-self: center
                  - margin-left: 6px
                  - margin-top: 2px
            custom_fields:
              picture: |
                [[[
                  let state = states['person.person_2'].state;
                  let borderColor = "gray";
                  if (state === "home") {
                    borderColor = "green";
                  } else if (state === "work1" || state === "work2") {
                    borderColor = "red";
                  } else {
                    borderColor = "orange";
                  }

                  let minutes = states['sensor.travel_time_home_person2']?.state || "";

                  return `<div style="border: 3px solid ${borderColor}; border-radius: 50%; width: 30px; height: 30px; background-color: black; display: flex; flex-direction: column; justify-content: center; align-items: center; color: white;">
                            <div style="font-size: 14px; font-weight: bold;">${minutes}</div>
                            <div style="font-size: 8px;">min</div>
                          </div>`;
                ]]]
        picture: |
          [[[
            let state = states['person.person_2'].state;
            let borderColor = "gray";
            if (state === "home") {
              borderColor = "green";
            } else if (state === "work1") {
              borderColor = "red";
            } else if (state === "work2") {
              borderColor = "red";
            } else {
              borderColor = "orange";
            }

            return `<div style="position: relative; margin: 0; padding: 0; border: 4px solid ${borderColor}; border-radius: 50%; width: 60px; height: 60px; display: flex; justify-content: center; align-items: center;">
                      <img src="${states['person.person_2'].attributes.entity_picture}" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin: 0; padding: 0;">
                    </div>`;
          ]]]
